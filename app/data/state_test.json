{
    "meta": {
        "id": "0000",
        "ready": false,
        "exitConfirmationIsVisible": false
    },
    "user": {
        "id": "123",
        "name": "Musterfrau"
    },
    "faq": {
        "isVisible": false,
        "data": [
            {
                "question": "Wie erstelle ich ein Code-Review?",
                "answer": "Zu diesem Thema findest du sowohl unter der Schaltfläche `Aufgabe` als auch in der `Checkliste` viele wertvolle Informationen. Ein wunderbare Einführung findest du auch auf der Website der [Google Engineering Practives documentation](https://google.github.io/eng-practices/review/reviewer/standard.html)."
            },
            {
                "question": "Wie füge ich einen Kommentar zu einer Code-Zeile hinzu?",
                "answer": "Du kannst in jeder Code-Zeile auf den `+` Icon clicken um in dieser Zeile einen Kommentar zu ergänzen.\n\n![graphik dazu](../assets/add_comment.jpg)"
            }
        ]
    },
    "checklist": {
        "isVisible": true,
        "categories": {
            "Vorbereitung": [
                {
                    "id": "11",
                    "label": "Hast du die Aufgabenstellung bzw. Aufgabenbeschreibung ausführlich durchgelesen und verstanden?",
                    "checked": false
                },
                {
                    "id": "12",
                    "label": "Sind die Ziele der Anwendung klar?",
                    "checked": false
                },
                {
                    "id": "13",
                    "label": "Weißst du in welchem Kontext die Anwendung verwendet werden soll?",
                    "checked": false
                }
            ],
            "Vorgehen": [
                {
                    "id": "21",
                    "label": "Ist die grundsätzliche Struktur der Anwendung klar?",
                    "checked": false
                },
                {
                    "id": "22",
                    "label": "Hast du die wichtisten Dateien, Klassen oder Komponenten identifiziert?",
                    "checked": false
                },
                {
                    "id": "23",
                    "label": "Hast du dir die wichtigsten Features oder Entwicklungen bewusst gemacht?",
                    "checked": false
                },
                {
                    "id": "24",
                    "label": "Beachtest du bei deinem Code-Review zunächst die wichtigsten Code-Artefakte?",
                    "checked": false
                },
                {
                    "id": "25",
                    "label": "Nutzt du die Richtlinien *unten*, um den Quellcode zu analysieren?",
                    "checked": false
                }
            ],
            "Richtlinien": [
                {
                    "id": "31",
                    "label": "Wurden bekannte *Coding Guidelines* eingehalten?",
                    "checked": false
                },
                {
                    "id": "32",
                    "label": "Wurden für Variablen und Methoden verständliche und treffend formulierte Bezeichner verwendet?",
                    "checked": false
                },
                {
                    "id": "33",
                    "label": "Folgt der Aufbau des Codes einem nachvollziehbaren und sinnvollen Konzept?",
                    "checked": false
                },
                {
                    "id": "34",
                    "label": "Wurden die verschiedenen Aufgabenbereiche der Software sichtbar und sinnvoll voneinander getrennt?",
                    "checked": false
                },
                {
                    "id": "35",
                    "label": "Wurde auf eine modularisierte Code-Strtuktur, z.B. durch gute *Decomposition* oder wiederverwendbare Methoden und Prototypen geachtet?",
                    "checked": false
                },
                {
                    "id": "36",
                    "label": "Wurde das [MVC-Konzept](https://de.wikipedia.org/wiki/Model_View_Controller) korrekt umgesetzt: Sind Model und UI klar voneinander getrennt?",
                    "checked": false
                },
                {
                    "id": "37",
                    "label": "Wurden kritische oder komplexe Stellen im Code ausreichend kommentiert?",
                    "checked": false
                },
                {
                    "id": "38",
                    "label": "Wurden alle nicht benötigten Teilbereiche des Codes entfernt? Wurden alle Debug-Ausgaben und -Methoden vor der Abgabe entfernt?",
                    "checked": false
                }
            ],
            "Feedback geben": [
                {
                    "id": "40",
                    "label": "**Kompliment:** Hast du besonders guten Code mit einem kleinen positiven Feedback gewürdigt?",
                    "checked": false
                },
                {
                    "id": "41",
                    "label": "**Strukur:** Nutzt dein Feedback die OIR-Regel: *Observation*, *Impact*, *Request*? (siehe: [großartiger Blogeintrag von Philipp Hauer](https://phauer.com/2018/code-review-guidelines/))",
                    "checked": false
                },
                {
                    "id": "42",
                    "label": "**Sprache:** Ist dein Kommentar in freundlicher und respektvoller Sprache verfasst? (eine schöne weiterführende Referenz dazu: [Respectful Code Reviews](https://chromium.googlesource.com/chromium/src/+/master/docs/cr_respect.md)) ",
                    "checked": false
                },
                {
                    "id": "43",
                    "label": "**Respekt:** Würdigt dein Feedback die Mühen und Leistungen des Entwicklers oder der Entwicklerin?",
                    "checked": false
                },
                {
                    "id": "44",
                    "label": "**Erklärung:** Hast du in deinem Kommentar erklärt, warum du diesen Code kommentierst?",
                    "checked": false
                },
                {
                    "id": "45",
                    "label": "**Austausch:** Hast du die Gelegenheit genutzt, um auf nützliche Ressouren zu verweisen?",
                    "checked": false
                },
                {
                    "id": "46",
                    "label": "**Subjekt:** Greifst du in deinem Kommentar den oder die *Entwickler:in* an, oder sprichst du über den *Code*? (Beispiele bei [Google's Engineering Practices documentation](https://google.github.io/eng-practices/review/reviewer/comments.html)",
                    "checked": false
                },
                {
                    "id": "47",
                    "label": "**Empathie:** Wird in deinem Feedback deutlich, dass du aus deiner Perspektive aus sprichst?",
                    "checked": false
                },
                {
                    "id": "48",
                    "label": "**Wahrheitsanspruch:** Gibt dein Feedback vor absoluten Wahrheitsanspruch zu haben, oder lässt es auch andere Lösungen und Perspektiven zu?",
                    "checked": false
                }
            ]
        }
    },
    "task": {
        "isVisible": false,
        "content": "##Führe ein Code-Review durch\nby Fabi\n\n---\n\nlet's go!"          
    },
    "content": {
        "currentFile": "fileSha0000",
        "commentCategories": [
            {
                "text": "Bug",
                "color": "red",
                "value": "1"
            },
            {
                "text": "Alternative",
                "color": "orange",
                "value": "2"
            },
            {
                "text": "Anmerkung",
                "color": "blue",
                "value": "3"
            },
            {
                "text": "Kompliment",
                "color": "green",
                "value": "4"
            }
        ],
        "files": {
            "fileSha0000": {
                "sha": "fileSha0000",
                "path": "src/js/Appserver.js",
                "text": "/* globals Vue, VueCodemirror, SemanticUIVue */\r\nimport ChecklistComponent from \"./components/checklist.js\";\r\nimport CodeEditorComponent from \"./components/code-editor.js\";\r\nimport CommentsDisplayComponent from \"./components/comments-display.js\";\r\nimport FaqComponent from \"./components/faq.js\";\r\nimport TaskComponent from \"./components/task.js\";\r\nimport TreeViewComponent from \"./components/tree-view.js\";\r\nimport store from \"./model/store.js\";\r\n\r\nVue.use(VueCodemirror);\r\nVue.use(SemanticUIVue);\r\n\r\n// eslint-disable-next-line no-new\r\nnew Vue({\r\n    el: \"#app\",\r\n    components: {\r\n        \"code-editor\": CodeEditorComponent,\r\n        \"comments-display\": CommentsDisplayComponent,\r\n        \"tree-view\": TreeViewComponent,\r\n        \"checklist\": ChecklistComponent,\r\n        \"faq-modal\": FaqComponent,\r\n        \"task-modal\": TaskComponent,\r\n    },\r\n    data: {\r\n        sharedState: store.state,\r\n        exitConfirmationIsVisible: false,\r\n    },\r\n    methods: {\r\n        toggleChecklist() {\r\n            store.toggleChecklistVisibility();\r\n        },\r\n        showFaq() {\r\n            store.toggleFaqVisibility();\r\n        },\r\n        showTask() {\r\n            store.toggleTaskVisibility();\r\n        },\r\n        toggleExitConfirmation() {\r\n            this.exitConfirmationIsVisible = !this.exitConfirmationIsVisible;\r\n        },\r\n        exit() {\r\n            location.href = \"./\";\r\n        },\r\n    },\r\n    mounted() {\r\n        document.querySelector(\"#loader\").style.display = \"none\";\r\n        document.querySelector(\"#app\").style.display = \"block\"; \r\n    },\r\n});",
                "linePresentationModifiers": [
                    {
                        "class": "unchanged_line",
                        "lines": [0,1,2,3,55]
                    }
                ],
                "activeCommentSection": null, 
                "comments": 
                [
                    {
                        "id": "10001",
                        "sectionId": "1",
                        "authorId": "2",
                        "authorAvatarUrl": "https://i.kym-cdn.com/photos/images/original/001/474/942/012.gif",
                        "authorUrl": "https://i.imgflip.com/40ga2o.jpg",
                        "authorName": "Winnie",
                        "content": "Morning my Friend",
                        "categoryId": "2"
                    },
                    {
                        "id": "10002",
                        "sectionId": "1",
                        "authorId": "12",
                        "authorAvatarUrl": "https://www.kindpng.com/picc/m/28-287073_elonlol-discord-emoji-elon-musk-laughing-deer-hd.png",
                        "authorName": "Elon",
                        "content": "I am gonna write a **super long** and not at all helpful comment because i am a ~~dick~~ and i want to destroy this `holes tool` career.",
                        "categoryId": "1"
                    },
                    {
                        "id": "10003",
                        "sectionId": "3",
                        "authorId": "12",
                        "authorAvatarUrl": "https://www.kindpng.com/picc/m/28-287073_elonlol-discord-emoji-elon-musk-laughing-deer-hd.png",
                        "authorName": "Elon",
                        "content": "Coding is not hard.",
                        "categoryId": "4"
                    },
                    {
                        "id": "10004",
                        "sectionId": "54",
                        "authorId": "2",
                        "authorAvatarUrl": "https://i.kym-cdn.com/photos/images/original/001/474/942/012.gif",
                        "authorUrl": "https://i.imgflip.com/40ga2o.jpg",
                        "authorName": "Winnie",
                        "content": "Side-Comments is not coded well.",
                        "categoryId": "1"
                    }
                ]
            },
            "fileSha0001": {
                "sha": "fileSha0001",
                "path": "src/js/SideComments.js",
                "text": "",
                "linePresentationModifiers": [
                    {
                        "class": "unchanged_line",
                        "lines": [0,1,2,3,4,5,6,7,8,9,10]
                    },
                    {
                        "class": "halloween_line",
                        "lines": [0,6,7,8,9,10,11,12,13,14]
                    }
                ],
                "activeCommentSection": "2",
                "comments": [
                    {
                        "id": "20001",
                        "sectionId": "2",
                        "authorId": "1111",
                        "authorAvatarUrl": "https://media.vanityfair.com/photos/5c2fdb09ef10e32ca1332862/1:1/w_1420,h_1420,c_limit/trumpshutdownraises.jpg",
                        "authorName": "Trump",
                        "content": "What's up with you?",
                        "categoryId": "3"
                    },
                    {
                        "id": "20002",
                        "sectionId": "12",
                        "authorId": "123",
                        "authorName": "Monkey D. Ruffy",
                        "content": "Why would you delete this?",
                        "categoryId": "2"
                    },
                    {
                        "id": "20003",
                        "sectionId": "12",
                        "authorId": "123",
                        "authorName": "Monkey D. Ruffy",
                        "content": "ID3 lol",
                        "categoryId": "2"
                    }
                ]
            },
            "fileSha0002": {
                "sha": "fileSha0002",
                "path": "src/test.htm",
                "text": "<!DOCTYPE HTML>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>HTMLHint</title>\n</head>\n<body>\n  <div>\"HTMLHint\": help your html code better\n</body>\n</html>",
                "linePresentationModifiers": [],
                "activeCommentSection": null,
                "comments": []
            },
            "fileSha0003": {
                "sha": "fileSha0003",
                "path": "src/test.css",
                "text": "",
                "linePresentationModifiers": [],
                "activeCommentSection": null,
                "comments": []
            }
        },
        "filetree": {
            "name": "src",
            "isOpen": true,
            "children": [
                { "sha": "undefined", "name": "test.html", "isModified": false},
                { "sha": "fileSha0002", "name": "test.htm", "isModified": true},
                { "sha": "fileSha0003", "name": "test.css", "isModified": true},
                { "sha": "undefined", "name": "test.txt", "isModified": false},
                {
                    "name": "js",
                    "isOpen": false,
                    "children": [
                        { "sha": "fileSha0000", "name": "AppServer.js", "isModified": true},
                        { "sha": "fileSha0001", "name": "SideComments.js", "isModified": false}
                    ]
                },
                {
                    "name": "test",
                    "isOpen": false,
                    "children": [
                        { "sha": "undefined", "name": "test.js", "isModified": false},
                        { "sha": "testfile0000", "name": "testfile.js", "isModified": false},
                        {
                            "name": "emptyFolder", "isOpen": false, "children": []
                        }
                    ]
                }
            ]
        }
    },
    "editor": {
        "activeTheme": "gruvbox-dark",
        "themes": [
            "default","gruvbox-dark","monokai","seti","idea","the-matrix"
        ]
    }
}